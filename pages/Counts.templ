package pages

import (
	"go-htmx-templ-todo-app/components"
	"strconv"
)

type Counts struct {
	Global  int
	Session int
}

type CountsPageProps struct {
	components.LayoutProps
	Counts Counts
}

templ CountsPage(props CountsPageProps) {
	@components.Layout(props.LayoutProps) {
		@CountsForm(CountsFormProps{Counts: props.Counts})
	}
}

type CountsFormProps struct {
	Counts Counts
}

templ CountsForm(props CountsFormProps) {
	<form id="countsForm" action="/" method="POST" hx-post="/" hx-select="#countsForm">
		<div class="grid grid-cols-2 gap-4">
			@countsFormGridCol(gridColProps{}) {
				<div class="text-center" hx-ext="sse" sse-connect="/sse?stream=global">
					<h1 class="text-3xl" sse-swap="GlobalCountChanged" hx-select="*" hx-swap="innerHTML"><span>{ strconv.Itoa(props.Counts.Global) }</span></h1>
					<p class="text-md">Global</p>
				</div>
				@components.Button(components.ButtonProps{Type: "submit", Name: "global", Value: "global"}) {
					+1
				}
			}
			@countsFormGridCol(gridColProps{
				borderColorClass: "border-indigo-300",
			}) {
				<div class="text-center" hx-ext="sse" sse-connect="/sse?stream=local">
					<h1 class="text-3xl" sse-swap="SessionCountChanged" hx-select="*" hx-swap="innerHTML"><span>{ strconv.Itoa(props.Counts.Session) }</span></h1>
					<p class="text-md">Session</p>
				</div>
				@components.Button(components.ButtonProps{Type: "submit", Name: "session", Value: "session"}) {
					+1
				}
			}
		</div>
	</form>
}

type gridColProps struct {
	borderColorClass string
}

func (p gridColProps) borderClassOrDefault() string {
	if p.borderColorClass == "" {
		return "border-teal-300"
	}
	return p.borderColorClass
}

templ countsFormGridCol(props gridColProps) {
	<div class={ "flex flex-col items-center justify-center gap-2 border-4 rounded-md py-8", props.borderClassOrDefault() }>
		{ children... }
	</div>
}
